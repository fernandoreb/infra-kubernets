[server]
#hostname = "192.168.0.27"
hostname = "$env{HOST_NAME}"
node_ip = "$env{NODE_IP}"
#offset=0
mode = "single" #single or ha
base_path = "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
#discard_empty_caches = false
server_role = "default"

[super_admin]
username = "admin"
password = "admin"
create_admin_account = true

[user_store]
type = "database_unique_id"

#base do api management
[database.apim_db]
type = "mysql"
url = "jdbc:mysql://mysql-service:3306/WSO2AM_DB?autoReconnect=true&amp;useSSL=false"
username = "wso2carbon"
password = "wso2carbon"
driver = "com.mysql.cj.jdbc.Driver"

#base compartilhada
[database.shared_db]
type = "mysql"
url = "jdbc:mysql://mysql-service:3306/WSO2AM_SHARED_DB?autoReconnect=true&amp;useSSL=false"
username = "wso2carbon"
password = "wso2carbon"
driver = "com.mysql.cj.jdbc.Driver"

[keystore.tls]
file_name =  "wso2carbon.jks"
type =  "JKS"
password =  "wso2carbon"
alias =  "wso2carbon"
key_password =  "wso2carbon"

#Gateway do Management
[[apim.gateway.environment]]
name = "Management"
type = "hybrid"
display_in_api_console = false
description = "This is a hybrid gateway that handles both production and sandbox token traffic."
show_as_token_endpoint_url = true
service_url = "https://localhost:${mgt.transport.https.port}/services/"
username= "${admin.username}"
password= "${admin.password}"
ws_endpoint = "ws://localhost:9099"
wss_endpoint = "wss://localhost:8099"
http_endpoint = "http://localhost:${http.nio.port}"
https_endpoint = "https://localhost:${https.nio.port}"

#Gateway Externo
#[[apim.gateway.environment]]
#name = "Gateway - Externo"
#type = "hybrid"
#display_in_api_console = true
#description = "Gateway de testes."
#show_as_token_endpoint_url = true
#service_url = "https://api-gtw:9447/services/"
#username= "${admin.username}"
#password= "${admin.password}"
#ws_endpoint = "ws://api-gtw:9103"
#wss_endpoint = "wss://api-gtw:8103"
#http_endpoint = "http://api-gtw:8284"
#https_endpoint = "https://api-gtw:8247"


#desligando cache da validação de tokens
[apim.cache.gateway_token]
enable = false
#expiry_time = "900s"

#Habiltando analytics
[apim.analytics]
enable = true
store_api_url = "https://am-analytics-worker-service:7446"
username = "$ref{super_admin.username}"
password = "$ref{super_admin.password}"


#Habiltando analytics
[[apim.analytics.url_group]]
analytics_url =["tcp://am-analytics-worker-service:7613"]
analytics_auth_url =["ssl://am-analytics-worker-service:7713"]
type = "loadbalance"

[apim.key_manager]
service_url = "https://localhost:${mgt.transport.https.port}/services/"
username = "$ref{super_admin.username}"
password = "$ref{super_admin.password}"
pool.init_idle_capacity = 50
pool.max_idle = 100
key_validation_handler_type = "default"
key_validation_handler_impl = "org.wso2.carbon.apimgt.keymgt.handlers.DefaultKeyValidationHandler"

#habilitando a validação do jwt (transformando em opaco)
[apim.oauth_config]
set_jwt_as_opaque_token = true
enable_outbound_auth_header = true

[transport.https.properties]
proxyPort = "$env{PROXY_PORT}"

[apim.cors]
allow_origins = "*"
allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey"]
allow_credentials = false

[[event_handler]]
name="userPostSelfRegistration"
subscriptions=["POST_ADD_USER"]

[service_provider]
sp_name_regex = "^[\\sa-zA-Z0-9._-]*$"

[database.local]
url = "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"
